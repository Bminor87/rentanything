package com.hellmanstudios.rentanything.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;

import com.hellmanstudios.rentanything.entities.Item;
import com.hellmanstudios.rentanything.repository.ItemRepository;
import com.hellmanstudios.rentanything.repository.CategoryRepository;

@SpringBootTest
@RunWith(SpringRunner.class)
public class ItemRestControllerTest {
    
    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private ItemRepository itemRepository;

    @Autowired
    private CategoryRepository categoryRepository;

    @MockBean
    private ItemRestController itemRestController;

    @BeforeAll
    public static void setup() {
        System.setProperty("SKIP_PROMPT", "true");
    }

    // @Test
    // public void givenItems_whenGetItems_thenReturnJsonArray() throws Exception {

    //     Item item = new Item();
    //     item.setName("Test Item");
    //     item.setDescription("Test Description");
    //     item.setPrice(10.0);
    //     item.setCategory(categoryRepository.findById(1L).get());
    //     itemRepository.save(item);

    //     List<Item> allItems = (List<Item>) itemRepository.findAll();

    //     mockMvc.perform(get("/api/items")
    //         .contentType("application/json"))
    //         .andExpect(status().isOk())
    //         .andExpect(content().json(allItems.toString()));

    // }

}
